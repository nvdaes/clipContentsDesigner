name: Build and test NVDA add-on

on:
  pull_request:
    branches:
      - master
jobs:

  addon:

    name: addon

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        pip install scons markdown
        sudo apt update
        sudo apt install gettext
    - name: Add add-on version
      run: |
        import re
        with open("buildVars.py", 'r+', encoding='utf-8') as f:
          text = f.read()
          text = re.sub("\"addon_version\" : ,", "\"addon_version\" : \"${{ github.sha }}\",", text)
          f.seek(0)
          f.write(text)
          f.truncate()
      shell: python 
    - name: Build add-on
      run: scons
    - name: Upload add-on
      uses: actions/upload-artifact@v2
      with:
        name: nvda-addon
        path: "*.nvda-addon"
    - name: Build pot
      run: scons pot
    - name: Upload pot
      uses: actions/upload-artifact@v2
      with:
        name: pot-file
        path: "*.pot"

        
  nvda:
  
    name: NVDA
  
    needs: addon
  
    runs-on: windows-latest

    steps:
    
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python 3.8 x86
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
        architecture: x86
    - name: Checkout NVDA
      uses: actions/checkout@v2
      with:
        repository: nvaccess/nvda
        submodules: true
    - name: Prepare NVDA's source tree
      run: scons source
      shell: cmd
    - name: Download add-on
      uses: actions/download-artifact@v2
      with:
        name: nvda-addon
    - name: Download pot
      uses: actions/download-artifact@v2
      with:
        name: pot-file
    - name: Copy add-on
      run: |
        move *.nvda-addon addon.zip
        Expand-Archive addon.zip source\userConfig\addons\addon
    - name: Start NVDA
      run: |
        runnvda -m --debug-logging
        ping 127.0.0.1 /n 20
      shell: cmd
    - name: Quit NVDA
      run: |
        runnvda -q
        ping 127.0.0.1 /n 20
      shell: cmd
    - name: Upload log
      uses: actions/upload-artifact@v2
      with:
        name: nvda-log
        path: source\nvda.log
    - name: Check pot
      run: |
        move *.pot tests\nvda.pot
        cd tests
        python checkPot.py nvda.pot > potResults.txt
        If (Select-String -Path potResults.txt -Pattern 'Message has no translator comment' -SimpleMatch) {exit 1}
    - name: Comment on PR
      uses: actions/github-script@v3
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'This PR has messages without comments for translators'
          })
          